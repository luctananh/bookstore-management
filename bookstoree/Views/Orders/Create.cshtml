@model bookstoree.Models.ViewModels.OrderCreateViewModel

@{
    ViewData["Title"] = "Create Order";
    Layout = "_Layout";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Create Order</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Create Order</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Order Details</h3>
                    </div>
                    <form asp-action="Create">
                        <div class="card-body">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <label asp-for="Order.OrderDate" class="control-label"></label>
                                <input asp-for="Order.OrderDate" class="form-control" />
                                <span asp-validation-for="Order.OrderDate" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Order.Status" class="control-label"></label>
                                <input asp-for="Order.Status" class="form-control" />
                                <span asp-validation-for="Order.Status" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Order.PaymentMethod" class="control-label"></label>
                                <input asp-for="Order.PaymentMethod" class="form-control" />
                                <span asp-validation-for="Order.PaymentMethod" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Order.DiscountCode" class="control-label"></label>
                                <select asp-for="Order.DiscountCode" class="form-control" asp-items="ViewBag.DiscountCode"></select>
                            </div>
                            <div class="form-group">
                                <label asp-for="Order.TotalAmount" class="control-label"></label>
                                <input asp-for="Order.TotalAmount" class="form-control" />
                                <span asp-validation-for="Order.TotalAmount" class="text-danger"></span>
                            </div>

                            <hr />
                            <h4>Order Items</h4>
                            <div id="orderDetailsContainer">
                                @* Initial OrderDetail item will be rendered here *@
                                @for (int i = 0; i < Model.OrderDetails.Count; i++)
                                {
                                    @Html.Partial("_OrderDetailEditor", Model.OrderDetails[i], new ViewDataDictionary(ViewData) { { "index", i } })
                                }
                            </div>
                            <button type="button" id="addOrderItem" class="btn btn-success">Add Item</button>
                        </div>
                        <div class="card-footer">
                            <input type="submit" value="Create" class="btn btn-primary" />
                            <button type="button" onclick="history.back()" class="btn btn-secondary">Back</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var orderDetailIndex = @Model.OrderDetails.Count; // Start index for new items

        $('#addOrderItem').click(function () {
            var newRow = '<div class="form-row order-detail-item mb-2">' +
                            '<div class="col-md-6">' +
                                '<div class="form-group">' +
                                    '<label for="OrderDetails_' + orderDetailIndex + '__BookId" class="control-label">Book</label>' +
                                    '<select id="OrderDetails_' + orderDetailIndex + '__BookId" class="form-control" name="OrderDetails[' + orderDetailIndex + '].BookId">' +
                                        '@(Html.Raw(Json.Serialize(ViewBag.Books)))'.replace(/&quot;/g, '"') // Deserialize and re-serialize to handle quotes
                                        .replace(/"Value":"(.*?)","Text":"(.*?)"/g, '<option value="$1">$2</option>') // Convert to options
                                    + '</select>' +
                                    '<span data-valmsg-for="OrderDetails[' + orderDetailIndex + '].BookId" class="text-danger"></span>' +
                                '</div>' +
                            '</div>' +
                            '<div class="col-md-4">' +
                                '<div class="form-group">' +
                                    '<label for="OrderDetails_' + orderDetailIndex + '__Quantity" class="control-label">Quantity</label>' +
                                    '<input id="OrderDetails_' + orderDetailIndex + '__Quantity" class="form-control" type="number" min="1" value="1" name="OrderDetails[' + orderDetailIndex + '].Quantity" />' +
                                    '<span data-valmsg-for="OrderDetails[' + orderDetailIndex + '].Quantity" class="text-danger"></span>' +
                                '</div>' +
                            '</div>' +
                            '<div class="col-md-2 d-flex align-items-end">' +
                                '<button type="button" class="btn btn-danger remove-order-item">Remove</button>' +
                            '</div>' +
                        '</div>';
            $('#orderDetailsContainer').append(newRow);
            orderDetailIndex++;
        });

        $(document).on('click', '.remove-order-item', function () {
            $(this).closest('.order-detail-item').remove();
        });
    </script>
}