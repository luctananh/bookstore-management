@model bookstoree.Models.Order
@{
    ViewData["Title"] = "Edit Order";
    Layout = "_Layout";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Edit Orderrrr</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Edit Order</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Order Details</h3>
                    </div>
                    <form asp-action="Edit" method="post">
                        <div class="card-body">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="OrderId" />
                            <div class="form-group">
                                <label asp-for="UserId" class="control-label"></label>
                                <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
                                <span asp-validation-for="UserId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="OrderDate" class="control-label"></label>
                                <input asp-for="OrderDate" class="form-control" />
                                <span asp-validation-for="OrderDate" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Status" class="control-label"></label>
                                <select asp-for="Status" class="form-control">
                                    <option value="Thanh toán tại cửa hàng">Thanh toán tại cửa hàng</option>
                                    <option value="Giao hàng">Giao hàng</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="PaymentMethod" class="control-label"></label>
                                <select asp-for="PaymentMethod" class="form-control">
                                    <option value="Chuyển khoản">Chuyển khoản</option>
                                    <option value="Tiền mặt">Tiền mặt</option>
                                    <option value="Giao hàng">Ship code</option>
                                </select>
                                <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="DiscountCode" class="control-label"></label>
                                <select asp-for="DiscountCode" class="form-control" asp-items="ViewBag.DiscountCode">
                                    <option value="">None</option>
                                </select>
                                <span asp-validation-for="DiscountCode" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="TotalAmount" class="control-label"></label>
                                <input asp-for="TotalAmount" class="form-control" />
                                <span asp-validation-for="TotalAmount" class="text-danger"></span>
                            </div>

                            <hr />
                            <h4>Order Items</h4>
                            <div id="orderDetailsContainer">
                                @* Existing OrderDetail items will be rendered here by JavaScript *@
                            </div>
                            <button type="button" id="addOrderItem" class="btn btn-success">Add Item</button>
                        </div>
                        <div class="card-footer">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            <button type="button" onclick="history.back()" class="btn btn-secondary">Back</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });

            var bookPrices = @Html.Raw(Json.Serialize(ViewData["BookPrices"]));
            var discountDetails = @Html.Raw(Json.Serialize(ViewData["DiscountDetails"]));
            var booksDataRaw = '@Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewData["BookListForJs"] ?? new List<object>()))';
            var booksData = JSON.parse(booksDataRaw);
            console.log("booksData:", booksData);

            function calculateTotal() {
                var subtotal = 0;
                $('.order-detail-item').each(function () {
                    var bookId = $(this).find('select[name$="BookId"]').val();
                    var quantity = parseInt($(this).find('input[name$="Quantity"]').val());
                    if (bookId && !isNaN(quantity) && bookPrices[bookId]) {
                        subtotal += bookPrices[bookId] * quantity;
                    }
                });

                var discountCode = $('#DiscountCode').val();
                var total = subtotal;
                if (discountCode && discountDetails[discountCode]) {
                    var discount = discountDetails[discountCode];
                                    if (subtotal >= discount.minimumOrder) {
                                        if (discount.discountType === 'Percent') {
                                            total = subtotal * (1 - discount.value / 100);
                                        } else { // Fixed
                                            total = subtotal - discount.value;
                                        }                    }
                }

                $('#TotalAmount').val(total < 0 ? 0 : total);
            }

            var orderDetailIndex = 0; // Start index for new items

            function addOrderItemRow(orderDetail) {
                var currentBookId = orderDetail ? orderDetail.BookId : '';
                var currentQuantity = orderDetail ? orderDetail.Quantity : 1;
                var currentOrderDetailId = orderDetail ? orderDetail.OrderDetailId : 0;

                var options = '';
                for (var i = 0; i < booksData.length; i++) {
                    var selected = (booksData[i].BookId == currentBookId) ? 'selected' : '';
                    options += '<option value="' + booksData[i].BookId + '" ' + selected + '>' + booksData[i].Title + '</option>';
                }

                var newRow = '<div class="form-row order-detail-item mb-2">' +
                                '<input type="hidden" name="OrderDetails[' + orderDetailIndex + '].OrderDetailId" value="' + currentOrderDetailId + '" />' +
                                '<div class="col-md-6">' +
                                    '<div class="form-group">' +
                                        '<label for="OrderDetails_' + orderDetailIndex + '__BookId" class="control-label">Book</label>' +
                                        '<select id="OrderDetails_' + orderDetailIndex + '__BookId" class="form-control select2bs4" name="OrderDetails[' + orderDetailIndex + '].BookId">' + options + '</select>' +
                                        '<span data-valmsg-for="OrderDetails[' + orderDetailIndex + '].BookId" class="text-danger"></span>' +
                                    '</div>' +
                                '</div>' +
                                '<div class="col-md-4">' +
                                    '<div class="form-group">' +
                                        '<label for="OrderDetails_' + orderDetailIndex + '__Quantity" class="control-label">Quantity</label>' +
                                        '<input id="OrderDetails_' + orderDetailIndex + '__Quantity" class="form-control" type="number" min="1" value="' + currentQuantity + '" name="OrderDetails[' + orderDetailIndex + '].Quantity" />' +
                                        '<span data-valmsg-for="OrderDetails[' + orderDetailIndex + '].Quantity" class="text-danger"></span>' +
                                    '</div>' +
                                '</div>' +
                                '<div class="col-md-2 d-flex align-items-end">' +
                                    '<button type="button" class="btn btn-danger remove-order-item">Remove</button>' +
                                '</div>' +
                            '</div>';
                $('#orderDetailsContainer').append(newRow);
                $('#OrderDetails_' + orderDetailIndex + '__BookId').select2({
                    theme: 'bootstrap4'
                });
                orderDetailIndex++;
            }

            // Pre-populate existing order details
            var existingOrderDetails = @Html.Raw(ViewData["ExistingOrderDetailsJson"] ?? "[]");
            if (existingOrderDetails && existingOrderDetails.length > 0) {
                $.each(existingOrderDetails, function(idx, detail) {
                    addOrderItemRow(detail);
                });
            } else {
                addOrderItemRow(null); // Add one empty row for new order
            }

            $('#addOrderItem').click(function () {
                addOrderItemRow(null);
                calculateTotal();
            });

            $(document).on('click', '.remove-order-item', function () {
                $(this).closest('.order-detail-item').remove();
                calculateTotal();
            });

            $(document).on('change', '.order-detail-item select, .order-detail-item input, #DiscountCode', function () {
                calculateTotal();
            });
        });
    </script>
}